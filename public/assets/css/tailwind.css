/*
! tailwindcss v3.0.18 | MIT License | https://tailwindcss.com
*/ /*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */ /* 3 */
  tab-size: 4; /* 3 */
  font-family: Roboto, system-ui, sans-serif; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
    'Liberation Mono', 'Courier New', monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role='button'] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*,
::before,
::after {
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x: ;
  --tw-pan-y: ;
  --tw-pinch-zoom: ;
  --tw-scroll-snap-strictness: proximity;
  --tw-ordinal: ;
  --tw-slashed-zero: ;
  --tw-numeric-figure: ;
  --tw-numeric-spacing: ;
  --tw-numeric-fraction: ;
  --tw-ring-inset: ;
  --tw-ring-offset-width: 2px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur: ;
  --tw-brightness: ;
  --tw-contrast: ;
  --tw-grayscale: ;
  --tw-hue-rotate: ;
  --tw-invert: ;
  --tw-saturate: ;
  --tw-sepia: ;
  --tw-drop-shadow: ;
  --tw-backdrop-blur: ;
  --tw-backdrop-brightness: ;
  --tw-backdrop-contrast: ;
  --tw-backdrop-grayscale: ;
  --tw-backdrop-hue-rotate: ;
  --tw-backdrop-invert: ;
  --tw-backdrop-opacity: ;
  --tw-backdrop-saturate: ;
  --tw-backdrop-sepia: ;
}

.container {
  width: 100%;
}

@media (min-width: 55.125em) {
  .container {
    max-width: 55.125em;
  }
}

@media (min-width: 63.25em) {
  .container {
    max-width: 63.25em;
  }
}

@media (min-width: 360px) {
  .container {
    max-width: 360px;
  }
}

@media (min-width: 480px) {
  .container {
    max-width: 480px;
  }
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 840px) {
  .container {
    max-width: 840px;
  }
}

@media (min-width: 1048px) {
  .container {
    max-width: 1048px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1440px) {
  .container {
    max-width: 1440px;
  }
}

.prose {
  color: var(--tw-prose-body);
  max-width: none;
}

.prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.prose :where(a):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-links);
  text-decoration: underline;
  font-weight: 500;
}

.prose :where(strong):not(:where([class~='not-prose'] *)) {
  color: inherit;
  font-weight: 600;
}

.prose :where(ol):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
  padding-left: 1.625em;
}

.prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='A' s]):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-alpha;
}

.prose :where(ol[type='a' s]):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-alpha;
}

.prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='I' s]):not(:where([class~='not-prose'] *)) {
  list-style-type: upper-roman;
}

.prose :where(ol[type='i' s]):not(:where([class~='not-prose'] *)) {
  list-style-type: lower-roman;
}

.prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
  list-style-type: decimal;
}

.prose :where(ul):not(:where([class~='not-prose'] *)) {
  list-style-type: disc;
  padding-left: 1.625em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
  color: var(--tw-prose-bullets);
}

.prose :where(hr):not(:where([class~='not-prose'] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.prose :where(blockquote):not(:where([class~='not-prose'] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: '\201C''\201D''\2018''\2019';
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.prose :where(h1):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 900;
}

.prose :where(h2):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5rem;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 800;
}

.prose :where(h3):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.25rem;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 700;
}

.prose :where(h4):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
  font-size: 1.125rem;
}

.prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
  font-weight: 700;
}

.prose :where(figure > *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose :where(figcaption):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-captions);
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}

.prose :where(code):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-code);
  font-weight: 600;
  font-size: 0.875em;
}

.prose :where(a code):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-links);
}

.prose :where(pre):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-pre-code);
  background-color: #1b1e28;
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}

.prose :where(pre code):not(:where([class~='not-prose'] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.prose :where(pre code):not(:where([class~='not-prose'] *))::before {
  content: none;
}

.prose :where(pre code):not(:where([class~='not-prose'] *))::after {
  content: none;
}

.prose :where(table):not(:where([class~='not-prose'] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.prose :where(thead):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.prose :where(thead th):not(:where([class~='not-prose'] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
  border-bottom-width: 0;
}

.prose :where(tbody td):not(:where([class~='not-prose'] *)) {
  vertical-align: baseline;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.prose {
  --tw-prose-body: #374151;
  --tw-prose-headings: #111827;
  --tw-prose-lead: #4b5563;
  --tw-prose-links: #111827;
  --tw-prose-bold: #111827;
  --tw-prose-counters: #6b7280;
  --tw-prose-bullets: #d1d5db;
  --tw-prose-hr: #e5e7eb;
  --tw-prose-quotes: #111827;
  --tw-prose-quote-borders: #e5e7eb;
  --tw-prose-captions: #6b7280;
  --tw-prose-code: #111827;
  --tw-prose-pre-code: #e5e7eb;
  --tw-prose-pre-bg: #1f2937;
  --tw-prose-th-borders: #d1d5db;
  --tw-prose-td-borders: #e5e7eb;
  --tw-prose-invert-body: #d1d5db;
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: #9ca3af;
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: #9ca3af;
  --tw-prose-invert-bullets: #4b5563;
  --tw-prose-invert-hr: #374151;
  --tw-prose-invert-quotes: #f3f4f6;
  --tw-prose-invert-quote-borders: #374151;
  --tw-prose-invert-captions: #9ca3af;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.prose :where(p):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.prose :where(img):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(video):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(figure):not(:where([class~='not-prose'] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.prose :where(h2 code):not(:where([class~='not-prose'] *)) {
  font-size: 0.875em;
}

.prose :where(h3 code):not(:where([class~='not-prose'] *)) {
  font-size: 0.9em;
}

.prose :where(li):not(:where([class~='not-prose'] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose :where(ol > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose :where(ul > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.375em;
}

.prose > :where(ul > li p):not(:where([class~='not-prose'] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.25em;
}

.prose > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.25em;
}

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(hr + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose > :where(:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose > :where(:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.prose {
  overflow-wrap: break-word;
}

.prose :where(a:focus):not(:where([class~='not-prose'] *)) {
  outline: none;
}

.prose :where(a:focus-visible):not(:where([class~='not-prose'] *)) {
  border-radius: 0.25rem;
  color: #006699;
  box-shadow: white 0px 0px 0px 2px, #006699 0px 0px 0px 5px;
}

.prose :where(h5):not(:where([class~='not-prose'] *)) {
  font-size: 1rem;
  font-weight: 700;
}

.prose :where(h6):not(:where([class~='not-prose'] *)) {
  font-size: 1rem;
  font-style: italic;
}

.prose :where(.no-list):not(:where([class~='not-prose'] *)) {
  list-style: none;
  padding-left: 0;
}

.prose :where(.no-list p):not(:where([class~='not-prose'] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.prose-sm {
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.prose-sm :where(p):not(:where([class~='not-prose'] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.prose-sm :where([class~='lead']):not(:where([class~='not-prose'] *)) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.prose-sm :where(blockquote):not(:where([class~='not-prose'] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.1111111em;
}

.prose-sm :where(h1):not(:where([class~='not-prose'] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.prose-sm :where(h2):not(:where([class~='not-prose'] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.prose-sm :where(h3):not(:where([class~='not-prose'] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.prose-sm :where(h4):not(:where([class~='not-prose'] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.prose-sm :where(img):not(:where([class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(video):not(:where([class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(figure):not(:where([class~='not-prose'] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.prose-sm :where(figure > *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.prose-sm :where(figcaption):not(:where([class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.prose-sm :where(code):not(:where([class~='not-prose'] *)) {
  font-size: 0.8571429em;
}

.prose-sm :where(h2 code):not(:where([class~='not-prose'] *)) {
  font-size: 0.9em;
}

.prose-sm :where(h3 code):not(:where([class~='not-prose'] *)) {
  font-size: 0.8888889em;
}

.prose-sm :where(pre):not(:where([class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(ol):not(:where([class~='not-prose'] *)) {
  padding-left: 1.5714286em;
}

.prose-sm :where(ul):not(:where([class~='not-prose'] *)) {
  padding-left: 1.5714286em;
}

.prose-sm :where(li):not(:where([class~='not-prose'] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.prose-sm :where(ol > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.4285714em;
}

.prose-sm :where(ul > li):not(:where([class~='not-prose'] *)) {
  padding-left: 0.4285714em;
}

.prose-sm > :where(ul > li p):not(:where([class~='not-prose'] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm
  > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.1428571em;
}

.prose-sm > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm
  > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 1.1428571em;
}

.prose-sm > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 1.1428571em;
}

.prose-sm
  :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.prose-sm :where(hr):not(:where([class~='not-prose'] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.prose-sm :where(hr + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm :where(h2 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm :where(h3 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm :where(h4 + *):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm :where(table):not(:where([class~='not-prose'] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}

.prose-sm :where(thead th):not(:where([class~='not-prose'] *)) {
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose-sm :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose-sm :where(tbody td):not(:where([class~='not-prose'] *)) {
  padding-top: 0.6666667em;
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.prose-sm :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
  padding-left: 0;
}

.prose-sm :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
  padding-right: 0;
}

.prose-sm > :where(:first-child):not(:where([class~='not-prose'] *)) {
  margin-top: 0;
}

.prose-sm > :where(:last-child):not(:where([class~='not-prose'] *)) {
  margin-bottom: 0;
}

.aspect-w-16 {
  position: relative;
  padding-bottom: calc(var(--tw-aspect-h) / var(--tw-aspect-w) * 100%);
  --tw-aspect-w: 16;
}

.aspect-w-16 > * {
  position: absolute;
  height: 100%;
  width: 100%;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.aspect-h-9 {
  --tw-aspect-h: 9;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.pointer-events-none {
  pointer-events: none;
}

.visible {
  visibility: visible;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.inset-0 {
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
}

.inset-x-0 {
  left: 0px;
  right: 0px;
}

.bottom-0 {
  bottom: 0px;
}

.left-0 {
  left: 0px;
}

.right-0 {
  right: 0px;
}

.top-0 {
  top: 0px;
}

.right-full {
  right: 100%;
}

.top-24 {
  top: 6rem;
}

.bottom-full {
  bottom: 100%;
}

.left-\[-3\.125vw\] {
  left: -3.125vw;
}

.right-\[1\.5625vw\] {
  right: 1.5625vw;
}

.top-\[1\.5625vw\] {
  top: 1.5625vw;
}

.top-40 {
  top: 10rem;
}

.right-6 {
  right: 1.5rem;
}

.bottom-6 {
  bottom: 1.5rem;
}

.z-50 {
  z-index: 50;
}

.z-30 {
  z-index: 30;
}

.z-20 {
  z-index: 20;
}

.\!z-10 {
  z-index: 10 !important;
}

.m-3 {
  margin: 0.75rem;
}

.\!m-0 {
  margin: 0px !important;
}

.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.my-6 {
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}

.my-px {
  margin-top: 1px;
  margin-bottom: 1px;
}

.my-12 {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.my-4 {
  margin-top: 1rem;
  margin-bottom: 1rem;
}

.my-8 {
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.mt-\[var\(--page-header-height\)\] {
  margin-top: var(--page-header-height);
}

.mb-4 {
  margin-bottom: 1rem;
}

.mb-1 {
  margin-bottom: 0.25rem;
}

.mr-4 {
  margin-right: 1rem;
}

.mb-2 {
  margin-bottom: 0.5rem;
}

.mr-2 {
  margin-right: 0.5rem;
}

.mb-20 {
  margin-bottom: 5rem;
}

.mr-2\.5 {
  margin-right: 0.625rem;
}

.mr-1 {
  margin-right: 0.25rem;
}

.mb-\[1em\] {
  margin-bottom: 1em;
}

.-mt-px {
  margin-top: -1px;
}

.mt-12 {
  margin-top: 3rem;
}

.mb-12 {
  margin-bottom: 3rem;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.\!flex {
  display: flex !important;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.grid {
  display: grid;
}

.contents {
  display: contents;
}

.hidden {
  display: none;
}

.h-5 {
  height: 1.25rem;
}

.h-10 {
  height: 2.5rem;
}

.h-4 {
  height: 1rem;
}

.h-6 {
  height: 1.5rem;
}

.h-9 {
  height: 2.25rem;
}

.h-full {
  height: 100%;
}

.h-16 {
  height: 4rem;
}

.h-96 {
  height: 24rem;
}

.h-20 {
  height: 5rem;
}

.h-12 {
  height: 3rem;
}

.h-48 {
  height: 12rem;
}

.h-24 {
  height: 6rem;
}

.h-8 {
  height: 2rem;
}

.\!h-screen {
  height: 100vh !important;
}

@supports (-webkit-touch-callout: none) {
  .\!h-screen {
    height: -webkit-fill-available;
  }
}

.h-\[9\.375vw\] {
  height: 9.375vw;
}

.h-\[0\.75em\] {
  height: 0.75em;
}

.h-3 {
  height: 0.75rem;
}

.h-56 {
  height: 14rem;
}

.max-h-screen {
  max-height: 100vh;
}

@supports (-webkit-touch-callout: none) {
  .max-h-screen {
    max-height: -webkit-fill-available;
  }
}

.min-h-screen {
  min-height: 100vh;
}

@supports (-webkit-touch-callout: none) {
  .min-h-screen {
    min-height: -webkit-fill-available;
  }
}

.min-h-\[calc\(100vh-var\(--page-header-height\)\)\] {
  min-height: calc(100vh - var(--page-header-height));
}

.\!min-h-screen {
  min-height: 100vh !important;
}

@supports (-webkit-touch-callout: none) {
  .\!min-h-screen {
    min-height: -webkit-fill-available;
  }
}

.w-full {
  width: 100%;
}

.w-5 {
  width: 1.25rem;
}

.w-10 {
  width: 2.5rem;
}

.w-4 {
  width: 1rem;
}

.w-6 {
  width: 1.5rem;
}

.w-9 {
  width: 2.25rem;
}

.w-16 {
  width: 4rem;
}

.w-20 {
  width: 5rem;
}

.w-12 {
  width: 3rem;
}

.w-24 {
  width: 6rem;
}

.w-8 {
  width: 2rem;
}

.w-32 {
  width: 8rem;
}

.w-\[9\.375vw\] {
  width: 9.375vw;
}

.w-\[0\.75em\] {
  width: 0.75em;
}

.w-3\.5 {
  width: 0.875rem;
}

.w-3 {
  width: 0.75rem;
}

.min-w-0 {
  min-width: 0px;
}

.max-w-screen-md {
  max-width: 840px;
}

.max-w-\[calc\(\(16\/9\*100vh\)-264px\)\] {
  max-width: calc((16 / 9 * 100vh) - 264px);
}

.max-w-screen-lg {
  max-width: 1048px;
}

.max-w-2xl {
  max-width: 42rem;
}

.max-w-xs {
  max-width: 20rem;
}

.max-w-80ch {
  max-width: 720px;
}

.max-w-screen-2xl {
  max-width: 1440px;
}

.max-w-screen-xl {
  max-width: 1280px;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.-translate-y-full {
  --tw-translate-y: -100%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.rotate-180 {
  --tw-rotate: 180deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.-rotate-90 {
  --tw-rotate: -90deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-default {
  cursor: default;
}

.select-none {
  -webkit-user-select: none;
  user-select: none;
}

.resize {
  resize: both;
}

.list-disc {
  list-style-type: disc;
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.flex-col {
  flex-direction: column;
}

.flex-wrap {
  flex-wrap: wrap;
}

.place-items-center {
  place-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.gap-4 {
  gap: 1rem;
}

.gap-8 {
  gap: 2rem;
}

.gap-6 {
  gap: 1.5rem;
}

.space-x-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.75rem * var(--tw-space-x-reverse));
  margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.5rem * var(--tw-space-y-reverse));
}

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.375rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.375rem * var(--tw-space-y-reverse));
}

.space-y-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.25rem * var(--tw-space-y-reverse));
}

.space-y-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.space-y-3 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.75rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.75rem * var(--tw-space-y-reverse));
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2rem * var(--tw-space-y-reverse));
}

.space-x-4 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1rem * var(--tw-space-x-reverse));
  margin-left: calc(1rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-8 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(2rem * var(--tw-space-x-reverse));
  margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem * var(--tw-space-y-reverse));
}

.space-y-24 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(6rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(6rem * var(--tw-space-y-reverse));
}

.space-y-16 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(4rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(4rem * var(--tw-space-y-reverse));
}

.space-y-10 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(2.5rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(2.5rem * var(--tw-space-y-reverse));
}

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.375rem * var(--tw-space-x-reverse));
  margin-left: calc(0.375rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-x-1 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.25rem * var(--tw-space-x-reverse));
  margin-left: calc(0.25rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-5 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(1.25rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1.25rem * var(--tw-space-y-reverse));
}

.space-y-\[3\.125vw\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(3.125vw * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(3.125vw * var(--tw-space-y-reverse));
}

.space-x-6 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(1.5rem * var(--tw-space-x-reverse));
  margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-12 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(3rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(3rem * var(--tw-space-y-reverse));
}

.self-end {
  align-self: flex-end;
}

.justify-self-end {
  justify-self: end;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-y-auto {
  overflow-y: auto;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-full {
  border-radius: 9999px;
}

.rounded-xl {
  border-radius: 0.75rem;
}

.border {
  border-width: 1px;
}

.border-\[0\.3vw\] {
  border-width: 0.3vw;
}

.border-2 {
  border-width: 2px;
}

.border-l-4 {
  border-left-width: 4px;
}

.border-t {
  border-top-width: 1px;
}

.border-l-2 {
  border-left-width: 2px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-neutral-100 {
  --tw-border-opacity: 1;
  border-color: rgb(245 245 245 / var(--tw-border-opacity));
}

.border-neutral-150 {
  --tw-border-opacity: 1;
  border-color: rgb(235 236 238 / var(--tw-border-opacity));
}

.border-primary-600 {
  --tw-border-opacity: 1;
  border-color: rgb(0 102 153 / var(--tw-border-opacity));
}

.border-neutral-600 {
  --tw-border-opacity: 1;
  border-color: rgb(82 82 82 / var(--tw-border-opacity));
}

.border-blue-600 {
  --tw-border-opacity: 1;
  border-color: rgb(37 99 235 / var(--tw-border-opacity));
}

.border-green-600 {
  --tw-border-opacity: 1;
  border-color: rgb(22 163 74 / var(--tw-border-opacity));
}

.border-yellow-500 {
  --tw-border-opacity: 1;
  border-color: rgb(234 179 8 / var(--tw-border-opacity));
}

.border-red-600 {
  --tw-border-opacity: 1;
  border-color: rgb(220 38 38 / var(--tw-border-opacity));
}

.border-neutral-200 {
  --tw-border-opacity: 1;
  border-color: rgb(229 229 229 / var(--tw-border-opacity));
}

.border-event-violet2 {
  --tw-border-opacity: 1;
  border-color: rgb(8 112 172 / var(--tw-border-opacity));
}

.bg-primary-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(0 102 153 / var(--tw-bg-opacity));
}

.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

.bg-neutral-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(38 38 38 / var(--tw-bg-opacity));
}

.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}

.bg-secondary-800 {
  --tw-bg-opacity: 1;
  background-color: rgb(44 53 71 / var(--tw-bg-opacity));
}

.bg-neutral-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(250 250 250 / var(--tw-bg-opacity));
}

.bg-blue-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(239 246 255 / var(--tw-bg-opacity));
}

.bg-green-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(240 253 244 / var(--tw-bg-opacity));
}

.bg-yellow-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 252 232 / var(--tw-bg-opacity));
}

.bg-red-50 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 242 242 / var(--tw-bg-opacity));
}

.bg-neutral-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.bg-\[\#0870ac\] {
  --tw-bg-opacity: 1;
  background-color: rgb(8 112 172 / var(--tw-bg-opacity));
}

.bg-event-pink1 {
  --tw-bg-opacity: 1;
  background-color: rgb(213 216 220 / var(--tw-bg-opacity));
}

.bg-error-600 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 38 38 / var(--tw-bg-opacity));
}

.bg-red-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(254 226 226 / var(--tw-bg-opacity));
}

.bg-green-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(220 252 231 / var(--tw-bg-opacity));
}

.bg-blue-100 {
  --tw-bg-opacity: 1;
  background-color: rgb(219 234 254 / var(--tw-bg-opacity));
}

.bg-opacity-50 {
  --tw-bg-opacity: 0.5;
}

.bg-gradient-to-b {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

.from-transparent {
  --tw-gradient-from: transparent;
  --tw-gradient-stops: var(--tw-gradient-from),
    var(--tw-gradient-to, rgb(0 0 0 / 0));
}

.via-transparent {
  --tw-gradient-stops: var(--tw-gradient-from), transparent,
    var(--tw-gradient-to, rgb(0 0 0 / 0));
}

.to-\[rgba\(0\2c 0\2c 0\2c 0\.65\)\] {
  --tw-gradient-to: rgba(0, 0, 0, 0.65);
}

.stroke-3 {
  stroke-width: 3;
}

.stroke-2 {
  stroke-width: 2;
}

.object-contain {
  object-fit: contain;
}

.object-cover {
  object-fit: cover;
}

.p-4 {
  padding: 1rem;
}

.p-6 {
  padding: 1.5rem;
}

.p-2 {
  padding: 0.5rem;
}

.p-8 {
  padding: 2rem;
}

.p-2\.5 {
  padding: 0.625rem;
}

.p-12 {
  padding: 3rem;
}

.p-0\.5 {
  padding: 0.125rem;
}

.p-0 {
  padding: 0px;
}

.p-\[1vw\] {
  padding: 1vw;
}

.\!p-0 {
  padding: 0px !important;
}

.p-10 {
  padding: 2.5rem;
}

.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.py-1 {
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.py-6 {
  padding-top: 1.5rem;
  padding-bottom: 1.5rem;
}

.px-4 {
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-16 {
  padding-top: 4rem;
  padding-bottom: 4rem;
}

.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}

.py-2 {
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-6 {
  padding-left: 1.5rem;
  padding-right: 1.5rem;
}

.py-3 {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
}

.py-8 {
  padding-top: 2rem;
  padding-bottom: 2rem;
}

.px-8 {
  padding-left: 2rem;
  padding-right: 2rem;
}

.py-12 {
  padding-top: 3rem;
  padding-bottom: 3rem;
}

.px-10 {
  padding-left: 2.5rem;
  padding-right: 2.5rem;
}

.py-10 {
  padding-top: 2.5rem;
  padding-bottom: 2.5rem;
}

.py-5 {
  padding-top: 1.25rem;
  padding-bottom: 1.25rem;
}

.px-\[6\.25vw\] {
  padding-left: 6.25vw;
  padding-right: 6.25vw;
}

.py-\[3\.125vw\] {
  padding-top: 3.125vw;
  padding-bottom: 3.125vw;
}

.py-1\.5 {
  padding-top: 0.375rem;
  padding-bottom: 0.375rem;
}

.pr-2 {
  padding-right: 0.5rem;
}

.pl-4 {
  padding-left: 1rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pb-8 {
  padding-bottom: 2rem;
}

.pt-12 {
  padding-top: 3rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.text-3xl {
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-4\.5xl {
  font-size: 2.5rem;
  line-height: 1;
}

.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

.text-5xl {
  font-size: 3rem;
  line-height: 1;
}

.text-6xl {
  font-size: 3.75rem;
  line-height: 1;
}

.text-\[1\.7vw\] {
  font-size: 1.7vw;
}

.font-medium {
  font-weight: 500;
}

.font-normal {
  font-weight: 400;
}

.font-extrabold {
  font-weight: 800;
}

.font-bold {
  font-weight: 700;
}

.font-semibold {
  font-weight: 600;
}

.uppercase {
  text-transform: uppercase;
}

.capitalize {
  text-transform: capitalize;
}

.leading-10 {
  line-height: 2.5rem;
}

.leading-7 {
  line-height: 1.75rem;
}

.leading-relaxed {
  line-height: 1.625;
}

.leading-snug {
  line-height: 1.375;
}

.tracking-wide {
  letter-spacing: 0.025em;
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.text-primary-600 {
  --tw-text-opacity: 1;
  color: rgb(0 102 153 / var(--tw-text-opacity));
}

.text-neutral-500 {
  --tw-text-opacity: 1;
  color: rgb(115 115 115 / var(--tw-text-opacity));
}

.text-neutral-400 {
  --tw-text-opacity: 1;
  color: rgb(163 163 163 / var(--tw-text-opacity));
}

.text-error-600 {
  --tw-text-opacity: 1;
  color: rgb(220 38 38 / var(--tw-text-opacity));
}

.text-neutral-800 {
  --tw-text-opacity: 1;
  color: rgb(38 38 38 / var(--tw-text-opacity));
}

.text-blue-800 {
  --tw-text-opacity: 1;
  color: rgb(30 64 175 / var(--tw-text-opacity));
}

.text-green-800 {
  --tw-text-opacity: 1;
  color: rgb(22 101 52 / var(--tw-text-opacity));
}

.text-yellow-800 {
  --tw-text-opacity: 1;
  color: rgb(133 77 14 / var(--tw-text-opacity));
}

.text-red-800 {
  --tw-text-opacity: 1;
  color: rgb(153 27 27 / var(--tw-text-opacity));
}

.text-neutral-600 {
  --tw-text-opacity: 1;
  color: rgb(82 82 82 / var(--tw-text-opacity));
}

.text-event-violet1 {
  --tw-text-opacity: 1;
  color: rgb(30 57 108 / var(--tw-text-opacity));
}

.text-event-orange {
  --tw-text-opacity: 1;
  color: rgb(237 111 89 / var(--tw-text-opacity));
}

.text-event-violet2 {
  --tw-text-opacity: 1;
  color: rgb(8 112 172 / var(--tw-text-opacity));
}

.text-\[\#1e396c\] {
  --tw-text-opacity: 1;
  color: rgb(30 57 108 / var(--tw-text-opacity));
}

.text-\[\#00396C\] {
  --tw-text-opacity: 1;
  color: rgb(0 57 108 / var(--tw-text-opacity));
}

.\!text-event-orange {
  --tw-text-opacity: 1 !important;
  color: rgb(237 111 89 / var(--tw-text-opacity)) !important;
}

.underline {
  -webkit-text-decoration-line: underline;
  text-decoration-line: underline;
}

.no-underline {
  -webkit-text-decoration-line: none;
  text-decoration-line: none;
}

.opacity-0 {
  opacity: 0;
}

.opacity-75 {
  opacity: 0.75;
}

.opacity-50 {
  opacity: 0.5;
}

.shadow-md {
  --tw-shadow: rgba(0, 0, 0, 0.08) 0px 5px 15px 0px;
  --tw-shadow-colored: 0px 5px 15px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),
    0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1),
    0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
    0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg {
  --tw-shadow: rgba(0, 0, 0, 0.12) 0px 10px 35px 0px;
  --tw-shadow-colored: 0px 10px 35px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-sm {
  --tw-shadow: rgba(0, 0, 0, 0.08) 0px 2px 8px 0px;
  --tw-shadow-colored: 0px 2px 8px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline {
  outline-style: solid;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
    var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)
    var(--tw-sepia) var(--tw-drop-shadow);
}

.transition {
  transition-property: color, background-color, border-color, fill, stroke,
    opacity, box-shadow, transform, filter, -webkit-text-decoration-color,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-text-decoration-color, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-\[400ms\] {
  transition-duration: 400ms;
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.before\:\!hidden::before {
  content: var(--tw-content);
  display: none !important;
}

.hover\:border-primary-600:hover {
  --tw-border-opacity: 1;
  border-color: rgb(0 102 153 / var(--tw-border-opacity));
}

.hover\:bg-neutral-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(64 64 64 / var(--tw-bg-opacity));
}

.hover\:bg-neutral-100:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.hover\:bg-primary-700:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(0 85 128 / var(--tw-bg-opacity));
}

.hover\:bg-primary-600:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(0 102 153 / var(--tw-bg-opacity));
}

.hover\:bg-red-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(254 202 202 / var(--tw-bg-opacity));
}

.hover\:bg-green-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(187 247 208 / var(--tw-bg-opacity));
}

.hover\:bg-blue-200:hover {
  --tw-bg-opacity: 1;
  background-color: rgb(191 219 254 / var(--tw-bg-opacity));
}

.hover\:text-white:hover {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

.hover\:text-primary-600:hover {
  --tw-text-opacity: 1;
  color: rgb(0 102 153 / var(--tw-text-opacity));
}

.hover\:text-event-violet2:hover {
  --tw-text-opacity: 1;
  color: rgb(8 112 172 / var(--tw-text-opacity));
}

.hover\:text-event-orange:hover {
  --tw-text-opacity: 1;
  color: rgb(237 111 89 / var(--tw-text-opacity));
}

.hover\:text-primary-700:hover {
  --tw-text-opacity: 1;
  color: rgb(0 85 128 / var(--tw-text-opacity));
}

.hover\:no-underline:hover {
  -webkit-text-decoration-line: none;
  text-decoration-line: none;
}

.hover\:opacity-100:hover {
  opacity: 1;
}

.hover\:shadow-lg:hover {
  --tw-shadow: rgba(0, 0, 0, 0.12) 0px 10px 35px 0px;
  --tw-shadow-colored: 0px 10px 35px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-xl:hover {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1),
    0 8px 10px -6px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),
    0 8px 10px -6px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:shadow-md:hover {
  --tw-shadow: rgba(0, 0, 0, 0.08) 0px 5px 15px 0px;
  --tw-shadow-colored: 0px 5px 15px 0px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000),
    var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.hover\:ring:hover {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.hover\:ring-white:hover {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.hover\:ring-offset-primary-600:hover {
  --tw-ring-offset-color: #006699;
}

.hover\:duration-150:hover {
  transition-duration: 150ms;
}

.focus\:translate-y-0:focus {
  --tw-translate-y: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y))
    rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y))
    scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.focus\:no-underline:focus {
  -webkit-text-decoration-line: none;
  text-decoration-line: none;
}

.focus\:opacity-100:focus {
  opacity: 1;
}

.focus\:outline-none:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.focus\:ring:focus {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus\:ring-white:focus {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.focus\:ring-offset-primary-600:focus {
  --tw-ring-offset-color: #006699;
}

.focus\:duration-150:focus {
  transition-duration: 150ms;
}

.focus-visible\:border-primary-600:focus-visible {
  --tw-border-opacity: 1;
  border-color: rgb(0 102 153 / var(--tw-border-opacity));
}

.focus-visible\:bg-neutral-100:focus-visible {
  --tw-bg-opacity: 1;
  background-color: rgb(245 245 245 / var(--tw-bg-opacity));
}

.focus-visible\:bg-primary-700:focus-visible {
  --tw-bg-opacity: 1;
  background-color: rgb(0 85 128 / var(--tw-bg-opacity));
}

.focus-visible\:ring:focus-visible {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0
    var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0
    calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow),
    var(--tw-shadow, 0 0 #0000);
}

.focus-visible\:ring-inset:focus-visible {
  --tw-ring-inset: inset;
}

.focus-visible\:ring-primary-600:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(0 102 153 / var(--tw-ring-opacity));
}

.focus-visible\:ring-white:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(255 255 255 / var(--tw-ring-opacity));
}

.focus-visible\:ring-neutral-400:focus-visible {
  --tw-ring-opacity: 1;
  --tw-ring-color: rgb(163 163 163 / var(--tw-ring-opacity));
}

.group:hover .group-hover\:opacity-100 {
  opacity: 1;
}

@media (min-width: 480px) {
  .xs\:flex-row {
    flex-direction: row;
  }

  .xs\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .xs\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .xs\:px-8 {
    padding-left: 2rem;
    padding-right: 2rem;
  }

  .xs\:py-16 {
    padding-top: 4rem;
    padding-bottom: 4rem;
  }
}

@media (min-width: 640px) {
  .sm\:prose {
    color: var(--tw-prose-body);
    max-width: none;
  }

  .sm\:prose :where([class~='lead']):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-lead);
    font-size: 1.25em;
    line-height: 1.6;
    margin-top: 1.2em;
    margin-bottom: 1.2em;
  }

  .sm\:prose :where(a):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-links);
    text-decoration: underline;
    font-weight: 500;
  }

  .sm\:prose :where(strong):not(:where([class~='not-prose'] *)) {
    color: inherit;
    font-weight: 600;
  }

  .sm\:prose :where(ol):not(:where([class~='not-prose'] *)) {
    list-style-type: decimal;
    padding-left: 1.625em;
  }

  .sm\:prose :where(ol[type='A']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-alpha;
  }

  .sm\:prose :where(ol[type='a']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-alpha;
  }

  .sm\:prose :where(ol[type='A' s]):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-alpha;
  }

  .sm\:prose :where(ol[type='a' s]):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-alpha;
  }

  .sm\:prose :where(ol[type='I']):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-roman;
  }

  .sm\:prose :where(ol[type='i']):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-roman;
  }

  .sm\:prose :where(ol[type='I' s]):not(:where([class~='not-prose'] *)) {
    list-style-type: upper-roman;
  }

  .sm\:prose :where(ol[type='i' s]):not(:where([class~='not-prose'] *)) {
    list-style-type: lower-roman;
  }

  .sm\:prose :where(ol[type='1']):not(:where([class~='not-prose'] *)) {
    list-style-type: decimal;
  }

  .sm\:prose :where(ul):not(:where([class~='not-prose'] *)) {
    list-style-type: disc;
    padding-left: 1.625em;
  }

  .sm\:prose :where(ol > li):not(:where([class~='not-prose'] *))::marker {
    font-weight: 400;
    color: var(--tw-prose-counters);
  }

  .sm\:prose :where(ul > li):not(:where([class~='not-prose'] *))::marker {
    color: var(--tw-prose-bullets);
  }

  .sm\:prose :where(hr):not(:where([class~='not-prose'] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .sm\:prose :where(blockquote):not(:where([class~='not-prose'] *)) {
    font-weight: 500;
    font-style: italic;
    color: var(--tw-prose-quotes);
    border-left-width: 0.25rem;
    border-left-color: var(--tw-prose-quote-borders);
    quotes: '\201C''\201D''\2018''\2019';
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-left: 1em;
  }

  .sm\:prose :where(h1):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: 2.25em;
    margin-top: 0;
    margin-bottom: 0.8888889em;
    line-height: 1.1111111;
  }

  .sm\:prose :where(h1 strong):not(:where([class~='not-prose'] *)) {
    font-weight: 900;
  }

  .sm\:prose :where(h2):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.5rem;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3333333;
  }

  .sm\:prose :where(h2 strong):not(:where([class~='not-prose'] *)) {
    font-weight: 800;
  }

  .sm\:prose :where(h3):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    font-size: 1.25rem;
    margin-top: 1.6em;
    margin-bottom: 0.6em;
    line-height: 1.6;
  }

  .sm\:prose :where(h3 strong):not(:where([class~='not-prose'] *)) {
    font-weight: 700;
  }

  .sm\:prose :where(h4):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 700;
    margin-top: 1.5em;
    margin-bottom: 0.5em;
    line-height: 1.5;
    font-size: 1.125rem;
  }

  .sm\:prose :where(h4 strong):not(:where([class~='not-prose'] *)) {
    font-weight: 700;
  }

  .sm\:prose :where(figure > *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .sm\:prose :where(figcaption):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-captions);
    font-size: 0.875em;
    line-height: 1.4285714;
    margin-top: 0.8571429em;
  }

  .sm\:prose :where(code):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-code);
    font-weight: 600;
    font-size: 0.875em;
  }

  .sm\:prose :where(a code):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-links);
  }

  .sm\:prose :where(pre):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-pre-code);
    background-color: #1b1e28;
    overflow-x: auto;
    font-weight: 400;
    font-size: 0.875em;
    line-height: 1.7142857;
    margin-top: 1.7142857em;
    margin-bottom: 1.7142857em;
    border-radius: 0.375rem;
    padding-top: 0.8571429em;
    padding-right: 1.1428571em;
    padding-bottom: 0.8571429em;
    padding-left: 1.1428571em;
  }

  .sm\:prose :where(pre code):not(:where([class~='not-prose'] *)) {
    background-color: transparent;
    border-width: 0;
    border-radius: 0;
    padding: 0;
    font-weight: inherit;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    line-height: inherit;
  }

  .sm\:prose :where(pre code):not(:where([class~='not-prose'] *))::before {
    content: none;
  }

  .sm\:prose :where(pre code):not(:where([class~='not-prose'] *))::after {
    content: none;
  }

  .sm\:prose :where(table):not(:where([class~='not-prose'] *)) {
    width: 100%;
    table-layout: auto;
    text-align: left;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: 0.875em;
    line-height: 1.7142857;
  }

  .sm\:prose :where(thead):not(:where([class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  .sm\:prose :where(thead th):not(:where([class~='not-prose'] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
    vertical-align: bottom;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .sm\:prose :where(tbody tr):not(:where([class~='not-prose'] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-td-borders);
  }

  .sm\:prose :where(tbody tr:last-child):not(:where([class~='not-prose'] *)) {
    border-bottom-width: 0;
  }

  .sm\:prose :where(tbody td):not(:where([class~='not-prose'] *)) {
    vertical-align: baseline;
    padding-top: 0.5714286em;
    padding-right: 0.5714286em;
    padding-bottom: 0.5714286em;
    padding-left: 0.5714286em;
  }

  .sm\:prose {
    --tw-prose-body: #374151;
    --tw-prose-headings: #111827;
    --tw-prose-lead: #4b5563;
    --tw-prose-links: #111827;
    --tw-prose-bold: #111827;
    --tw-prose-counters: #6b7280;
    --tw-prose-bullets: #d1d5db;
    --tw-prose-hr: #e5e7eb;
    --tw-prose-quotes: #111827;
    --tw-prose-quote-borders: #e5e7eb;
    --tw-prose-captions: #6b7280;
    --tw-prose-code: #111827;
    --tw-prose-pre-code: #e5e7eb;
    --tw-prose-pre-bg: #1f2937;
    --tw-prose-th-borders: #d1d5db;
    --tw-prose-td-borders: #e5e7eb;
    --tw-prose-invert-body: #d1d5db;
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: #9ca3af;
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: #9ca3af;
    --tw-prose-invert-bullets: #4b5563;
    --tw-prose-invert-hr: #374151;
    --tw-prose-invert-quotes: #f3f4f6;
    --tw-prose-invert-quote-borders: #374151;
    --tw-prose-invert-captions: #9ca3af;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: #d1d5db;
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: #4b5563;
    --tw-prose-invert-td-borders: #374151;
    font-size: 1rem;
    line-height: 1.75;
  }

  .sm\:prose :where(p):not(:where([class~='not-prose'] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .sm\:prose :where(img):not(:where([class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(video):not(:where([class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(figure):not(:where([class~='not-prose'] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .sm\:prose :where(h2 code):not(:where([class~='not-prose'] *)) {
    font-size: 0.875em;
  }

  .sm\:prose :where(h3 code):not(:where([class~='not-prose'] *)) {
    font-size: 0.9em;
  }

  .sm\:prose :where(li):not(:where([class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .sm\:prose :where(ol > li):not(:where([class~='not-prose'] *)) {
    padding-left: 0.375em;
  }

  .sm\:prose :where(ul > li):not(:where([class~='not-prose'] *)) {
    padding-left: 0.375em;
  }

  .sm\:prose > :where(ul > li p):not(:where([class~='not-prose'] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose
    > :where(ul > li > *:first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.25em;
  }

  .sm\:prose
    > :where(ul > li > *:last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
  }

  .sm\:prose
    > :where(ol > li > *:first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 1.25em;
  }

  .sm\:prose
    > :where(ol > li > *:last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 1.25em;
  }

  .sm\:prose
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~='not-prose'] *)) {
    margin-top: 0.75em;
    margin-bottom: 0.75em;
  }

  .sm\:prose :where(hr + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose :where(h2 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose :where(h3 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose :where(h4 + *):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose :where(thead th:first-child):not(:where([class~='not-prose'] *)) {
    padding-left: 0;
  }

  .sm\:prose :where(thead th:last-child):not(:where([class~='not-prose'] *)) {
    padding-right: 0;
  }

  .sm\:prose :where(tbody td:first-child):not(:where([class~='not-prose'] *)) {
    padding-left: 0;
  }

  .sm\:prose :where(tbody td:last-child):not(:where([class~='not-prose'] *)) {
    padding-right: 0;
  }

  .sm\:prose > :where(:first-child):not(:where([class~='not-prose'] *)) {
    margin-top: 0;
  }

  .sm\:prose > :where(:last-child):not(:where([class~='not-prose'] *)) {
    margin-bottom: 0;
  }

  .sm\:prose {
    overflow-wrap: break-word;
  }

  .sm\:prose :where(a:focus):not(:where([class~='not-prose'] *)) {
    outline: none;
  }

  .sm\:prose :where(a:focus-visible):not(:where([class~='not-prose'] *)) {
    border-radius: 0.25rem;
    color: #006699;
    box-shadow: white 0px 0px 0px 2px, #006699 0px 0px 0px 5px;
  }

  .sm\:prose :where(h5):not(:where([class~='not-prose'] *)) {
    font-size: 1rem;
    font-weight: 700;
  }

  .sm\:prose :where(h6):not(:where([class~='not-prose'] *)) {
    font-size: 1rem;
    font-style: italic;
  }

  .sm\:prose :where(.no-list):not(:where([class~='not-prose'] *)) {
    list-style: none;
    padding-left: 0;
  }

  .sm\:prose :where(.no-list p):not(:where([class~='not-prose'] *)) {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }
}

@media (min-width: 840px) {
  .md\:block {
    display: block;
  }

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:flex-row {
    flex-direction: row;
  }

  .md\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }

  .md\:space-x-6 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(1.5rem * var(--tw-space-x-reverse));
    margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .md\:p-10vmin {
    padding: 10vmin;
  }

  .md\:py-24 {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }

  .md\:py-6 {
    padding-top: 1.5rem;
    padding-bottom: 1.5rem;
  }
}

@media (min-width: 1048px) {
  .lg\:flex {
    display: flex;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:h-60 {
    height: 15rem;
  }

  .lg\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .lg\:items-baseline {
    align-items: baseline;
  }

  .lg\:space-x-8 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-x-reverse: 0;
    margin-right: calc(2rem * var(--tw-space-x-reverse));
    margin-left: calc(2rem * calc(1 - var(--tw-space-x-reverse)));
  }

  .lg\:text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }

  .lg\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .lg\:text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }

  .lg\:text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@media (min-width: 1280px) {
  .xl\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 1440px) {
  .\32xl\:block {
    display: block;
  }

  .\32xl\:flex {
    display: flex;
  }

  .\32xl\:hidden {
    display: none;
  }

  .\32xl\:max-w-none {
    max-width: none;
  }

  .\32xl\:grid-cols-content-layout {
    grid-template-columns: 1fr 720px 1fr;
  }

  .\32xl\:flex-col {
    flex-direction: column;
  }

  .\32xl\:gap-x-10 {
    column-gap: 2.5rem;
  }

  .\32xl\:space-y-0 > :not([hidden]) ~ :not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px * var(--tw-space-y-reverse));
  }
}

@media (min-width: 55.125em) {
  .event-md\:block {
    display: block;
  }
}
